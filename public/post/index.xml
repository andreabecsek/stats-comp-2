<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Statistical Computing 2 Portfolio</title>
    <link>/post/</link>
    <description>Recent content in Posts on Statistical Computing 2 Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 13 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Advanced Rcpp</title>
      <link>/post/advanced-rcpp/</link>
      <pubDate>Sat, 13 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/advanced-rcpp/</guid>
      <description>Load dataset on solar electricity production in Sydney
set.seed(123) # load dataset solar &amp;lt;- readRDS(&amp;#39;../data/solarAU.RDS&amp;#39;) # reduce dataset to 2000 observations solar &amp;lt;- solar[1:2000,] # create a log production variable solar$logprod &amp;lt;- log(solar$prod + 0.01) head(solar) ## prod toy tod logprod ## 8832 0.019 0.000000e+00 0 -3.540459 ## 8833 0.032 5.708088e-05 1 -3.170086 ## 8834 0.020 1.141618e-04 2 -3.506558 ## 8835 0.038 1.712427e-04 3 -3.036554 ## 8836 0.036 2.283235e-04 4 -3.</description>
    </item>
    
    <item>
      <title>Intro to Linux</title>
      <link>/post/intro-to-linux/</link>
      <pubDate>Sat, 13 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/intro-to-linux/</guid>
      <description>Linux is a open-source version of the UNIX operating system.
 Kernel: heart of the operating system and manages everything from memory to hardware devices. Shell: interface between the user and the kernel. There are different types of shells, for example Bourne shell (sh) and Bourne Again Shell (bash) etc.  Users First of all, since linux is a multiuser system, we might want to check the following:
 who you are logged in as using whoami who else is logged in: users or who for more details   File management All the data is organized into files and directories, all of which are organized into a tree structure.</description>
    </item>
    
    <item>
      <title>Intro to C&#43;&#43;</title>
      <link>/post/intro-to-c/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/intro-to-c/</guid>
      <description>C++ is a statically typed, compiled language, and it can be used across multiple platforms. Moreover, C++ is a great programming language for high-performance computing as it provides the user with much control over memory and system resources. It is also great for object-oriented programming and therefore it is used for a wide range of applications.
Creating a C++ program and some basic syntax Write your code using a text editor and save as filename.</description>
    </item>
    
    <item>
      <title>Rcpp</title>
      <link>/post/rcpp/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/rcpp/</guid>
      <description>The aim of this portfolio is to demonstrate the usage of C++ in conjunction with R via the Rcpp package. The application that we are considering is the adaptive kernel regression smoothing.
Simulate data generated by the model \[y_i = sin(\alpha\pi x^3)+z_i, \;\; \text{where}\;z_i \sim\mathcal{N}(0,\sigma^2),\]
for \(i=1, \cdots, 400\), \(\alpha=4\), and \(\sigma=0.2\).
set.seed(42) n &amp;lt;- 400 x &amp;lt;- runif(n) y &amp;lt;- sin(4 * pi * x^3) + rnorm(n, 0, 0.</description>
    </item>
    
  </channel>
</rss>